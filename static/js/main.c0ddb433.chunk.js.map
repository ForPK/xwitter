{"version":3,"sources":["fbManager.js","components/Xwitt.js","components/XwittFactory.js","routes/Home.js","components/AuthForm.js","routes/Auth.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","Xwitt","xwittObj","isOwner","useState","editing","setEditing","text","newXwitt","setNewXwitt","onDelete","a","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","prev","onEditingSubmit","e","preventDefault","update","onSubmit","type","placeholder","onChange","value","target","required","onClick","src","width","height","XwittFactory","userObj","xwitt","setXwitt","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createAt","Date","now","createId","collection","add","maxLength","console","log","files","theFile","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","accept","Home","xwitts","setXwitts","useEffect","onSnapshot","snapshot","xwittArray","docs","map","data","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","Auth","onSocialClick","signInWithPopup","GoogleAuthProvider","GithubAuthProvider","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","to","AppRouter","isLoggedIn","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c0ddb433.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import { dbService, storageService } from \"fbManager\";\nimport React, { useState } from \"react\";\n\nconst Xwitt = ({ xwittObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newXwitt, setNewXwitt] = useState(xwittObj.text);\n  const onDelete = async () => {\n    const ok = window.confirm(\"Are you sure you want to delete this xwitt?\");\n    if (ok) {\n      await dbService.doc(`xwitts/${xwittObj.id}`).delete();\n      await storageService.refFromURL(xwittObj.attachmentUrl).delete();\n    }\n  };\n\n  const toggleEditing = () => setEditing((prev) => !prev);\n\n  const onEditingSubmit = async (e) => {\n    e.preventDefault();\n    await dbService.doc(`xwitts/${xwittObj.id}`).update({\n      text: newXwitt,\n    });\n    setEditing(false);\n  };\n\n  const onEditing = (e) => {\n    const { value } = e.target;\n    setNewXwitt(value);\n  };\n\n  return (\n    <div>\n      {editing ? (\n        <>\n          {isOwner && (\n            <>\n              <form onSubmit={onEditingSubmit}>\n                <input\n                  type=\"text\"\n                  placeholder=\"Edit your Xwitt\"\n                  onChange={onEditing}\n                  value={newXwitt}\n                  required\n                />\n                <input type=\"submit\" value=\"Update\" />\n              </form>\n              <button onClick={toggleEditing}>Cancel</button>\n            </>\n          )}\n        </>\n      ) : (\n        <>\n          <p>{xwittObj.text}</p>\n          {xwittObj.attachmentUrl && (\n            <img src={xwittObj.attachmentUrl} width=\"50px\" height=\"50px\" />\n          )}\n          {isOwner && (\n            <>\n              <button onClick={onDelete}>Delete</button>\n              <button onClick={toggleEditing}>Edit</button>\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Xwitt;\n","import React, { useState } from \"react\";\nimport { dbService, storageService } from \"fbManager\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst XwittFactory = ({ userObj }) => {\n  const [xwitt, setXwitt] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    let attachmentUrl = null;\n    if (attachment !== \"\") {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n      // putString 호출하면 UploadTask를 리턴해줌\n      // uuid 사진명\n    }\n\n    const xwittObj = {\n      text: xwitt,\n      createAt: Date.now(),\n      createId: userObj.uid,\n      attachmentUrl,\n    };\n    await dbService.collection(\"xwitts\").add(xwittObj);\n    setXwitt(\"\");\n    setAttachment(\"\");\n  };\n\n  const onChange = (e) => {\n    const { value } = e.target;\n    setXwitt(value);\n  };\n\n  const onFileChange = (e) => {\n    console.log(e.target.files);\n    const {\n      target: { files },\n    } = e;\n    const theFile = files[0]; // 하나만\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      // 파일 로딩 또는 읽는 것이 끝날때 finishedEvent 갖게 됨\n      console.log(finishedEvent);\n      // currentTarget.result\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n    // img를 문자열로 변환해줌\n  };\n\n  const onClearAttachment = () => setAttachment(null);\n\n  return (\n    <form onSubmit={onSubmit}>\n      <input\n        onChange={onChange}\n        value={xwitt}\n        type=\"text\"\n        placeholder=\"What's on your mind\"\n        maxLength={120}\n      />\n      <input onChange={onFileChange} type=\"file\" accept=\"image/*\" />\n      <input type=\"submit\" value=\"Xwitt\" />\n      {attachment && (\n        <div>\n          <img src={attachment} width=\"50px\" height=\"50px\" />\n          <button onClick={onClearAttachment}>Clear</button>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default XwittFactory;\n","import React, { useEffect, useState } from \"react\";\nimport { dbService } from \"fbManager\";\nimport Xwitt from \"components/Xwitt\";\nimport XwittFactory from \"components/XwittFactory\";\n\nconst Home = ({ userObj }) => {\n  const [xwitts, setXwitts] = useState([]);\n\n  useEffect(() => {\n    dbService.collection(\"xwitts\").onSnapshot((snapshot) => {\n      // console.log(snapshot.docs); // read, deldte, update\n      const xwittArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setXwitts(xwittArray);\n    }); // 더 적게 리렌더 되서 더 빠르게 실행됨\n  }, []);\n\n  return (\n    <>\n      <XwittFactory userObj={userObj} />\n      <div>\n        {xwitts.map((xwitt) => (\n          <Xwitt\n            key={xwitt.id}\n            xwittObj={xwitt}\n            isOwner={xwitt.createId === userObj.uid}\n          />\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default Home;\n","import React, { useState } from \"react\";\nimport { authService } from \"fbManager\";\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const onChange = (e) => {\n    // console.log(e.target.name);\n    const { name, value } = e.target;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        // create account\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        // login\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const toggleAccount = () =>\n    setNewAccount((prev) => {\n      return !prev;\n    });\n\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Email\"\n          onChange={onChange}\n          value={email}\n          required\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Password\"\n          onChange={onChange}\n          value={password}\n          required\n        />\n        <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Login\"} />\n        {error}\n      </form>\n      <span onClick={toggleAccount}>\n        {newAccount ? \"Sign In\" : \"Create Account\"}\n      </span>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import React, { useState } from \"react\";\nimport { authService, firebaseInstance } from \"fbManager\";\nimport AuthForm from \"components/AuthForm\";\n\nconst Auth = () => {\n  const onSocialClick = async (e) => {\n    const { name } = e.target;\n\n    if (name === \"google\") {\n      await authService.signInWithPopup(\n        new firebaseInstance.auth.GoogleAuthProvider()\n      );\n    } else if (name === \"github\") {\n      await authService.signInWithPopup(\n        new firebaseInstance.auth.GithubAuthProvider()\n      );\n    }\n  };\n\n  return (\n    <div>\n      <AuthForm />\n      <div>\n        <button onClick={onSocialClick} name=\"google\">\n          Continue with Google\n        </button>\n        <button onClick={onSocialClick} name=\"github\">\n          Continue with Github\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { authService } from \"fbManager\";\n\nconst Profile = ({ refreshUser, userObj }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n    refreshUser();\n  };\n\n  const onChange = (e) => {\n    const {\n      target: { value },\n    } = e;\n    setNewDisplayName(value);\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUser();\n    }\n  };\n\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input\n          onChange={onChange}\n          value={newDisplayName}\n          type=\"text\"\n          placeholder=\"Display Name\"\n        />\n        <input type=\"submit\" placeholder=\"Update\" />\n      </form>\n      <button onClick={onLogOutClick}>Logout</button>\n    </>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Navigation = ({ userObj }) => {\n  return (\n    <nav>\n      <ul>\n        <li>\n          <Link to=\"/\">Home</Link>\n        </li>\n        <li>\n          <Link to=\"/profile\">{userObj.displayName}</Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"routes/Home\";\nimport Auth from \"routes/Auth\";\nimport Profile from \"routes/Profile\";\nimport Navigation from \"components/Navigation\";\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <>\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n          </>\n        ) : (\n          <Router exact path=\"/\">\n            <Auth />\n          </Router>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbManager\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n          // firebase의 특정부분만 가져와서 react한테 전달해줌\n        });\n      } else {\n        setUserObj(null);\n        // 로그아웃\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"initializing...\"\n      )}\n\n      <footer>&copy; {new Date().getFullYear()} Xwitter</footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}