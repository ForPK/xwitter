{"version":3,"sources":["style/theme.js","fbManager.js","style/GlobalStyles.js","components/Xwitt/styled.js","components/Xwitt/index.js","components/Xwitt/XwitterFatory/styled.js","components/Xwitt/XwitterFatory/index.js","routes/Home/styled.js","routes/Home/index.js","components/Auth/AuthForm/styled.js","components/Auth/AuthForm/index.js","routes/Auth/styled.js","components/Auth/AuthAccount/styled.js","components/Auth/AuthAccount/index.js","routes/Auth/index.js","routes/Profile/styled.js","routes/Profile/index.js","components/Navigation/styled.js","components/Navigation/index.js","components/Router.js","components/styled.js","components/App.js","index.js"],"names":["size","mobileS","mobileM","mobileL","tabletS","tabletM","tabletL","laptop","desktop","theme","mobile","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","GlobalStyles","createGlobalStyle","reset","MainBtnDefault","css","MainBoxDefault","XwitterWrap","styled","div","XwitterTopBar","XwitterEditWrap","XwitterEditForm","form","XwitterEditText","textarea","props","XwitterEditButtonWrap","XwitterEditButton","input","cancel","XwitterText","XwitterIconWrap","XwitterButton","button","XwitterIcon","span","delete","XwitterImgWrap","p","XwitterImg","img","Xwitt","xwittObj","isOwner","useState","editing","setEditing","text","newXwitt","setNewXwitt","onDelete","a","window","confirm","doc","id","refFromURL","attachmentUrl","toggleEditing","prev","onEditingSubmit","e","preventDefault","update","onSubmit","type","placeholder","onChange","value","target","required","onClick","title","src","alt","XwitterFatoryForm","XwitterTextInputWrap","XwitterTextInput","CountText","AttachmentPreview","AttachmentPreviewClear","FormBottomWrap","AttachmentLabel","label","AttachmentInput","XwitterSave","XwitterFatory","userObj","xwitt","setXwitt","attachment","setAttachment","numberText","setNumberText","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createAt","Date","now","createId","collection","add","length","maxLength","icon","faTimes","htmlFor","faImage","theFile","files","reader","FileReader","onloadend","finishedEvent","console","log","result","currentTarget","readAsDataURL","accept","HomeWrap","XwitterBox","Home","xwitts","setXwitts","useEffect","orderBy","onSnapshot","snapshot","xwittArray","docs","map","data","AuthFormWrap","AuthFormInput","AuthToggle","errorShake","keyframes","ErrorDesc","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","signInWithEmailAndPassword","shakeText","message","current","focuseInput","useRef","focus","classList","setTimeout","remove","AuthWrap","AuthContainer","LogoWrap","h1","AuthAccountWrap","LogoIcon","GoggleGitButton","AuthAccount","onSocialClick","signInWithPopup","GoogleAuthProvider","GithubAuthProvider","faGoogle","faGithub","Auth","faCommentDots","ProfileWrap","ProfileNickInput","ProfileNickFin","LogoutButton","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Nav","nav","NavWrap","ul","NavItem","li","NavIcon","NavTitle","Greetings","h2","Navigation","to","faHome","faUser","AppRouter","isLoggedIn","exact","path","AppWrap","LoadingWrap","LoadingText","Footer","footer","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","faSpinner","spin","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6758e00e.chunk.js","sourcesContent":["const size = {\n  mobileS: \"420px\",\n  mobileM: \"550px\",\n  mobileL: \"770px\",\n  tabletS: \"1023px\",\n  tabletM: \"1220px\",\n  tabletL: \"1280px\",\n  laptop: \"1460px\",\n  desktop: \"1700px\",\n};\n\nconst theme = {\n  mobileS: `(max-width: ${size.mobileS})`,\n  mobileM: `(max-width: ${size.mobileM})`,\n  mobileL: `(max-width: ${size.mobile})`,\n  tabletS: `(max-width: ${size.tabletS})`,\n  tabletM: `(max-width: ${size.tabletM})`,\n  tabletL: `(max-width: ${size.tabletL})`,\n  laptop: `(max-width: ${size.laptop})`,\n  desktop: `(max-width: ${size.desktop})`,\n};\n\nexport default theme;\n","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import styled, { createGlobalStyle, css } from \"styled-components\";\nimport { reset } from \"styled-reset\";\n\nconst GlobalStyles = createGlobalStyle`\n    ${reset};\n\n  :root {\n    --color-main: #04aaff;\n    --color-sub: #6b9ad6;\n    --color-point: #76cfff;\n    --color-background: #0f1323;\n    --color-placeholder: #999;\n    --box-shadow:0px 0px 20px 10px rgba(72, 168, 246, 0.1);\n    --letter-spacing: .1em;\n    --line-height: 1.2em;\n    --spacing: 20px;\n    --spacing-wrap: 40px;\n    --border-radius: 5px;\n    --btn-gradient: linear-gradient(90deg, #604398, #218c82);\n    \n  }\n\n  * {\n    vertical-align: top;\n    border: 0;\n    box-sizing: border-box;\n    padding: 0;\n    margin: 0;\n  }\n\n  html {\n    overflow-y: scroll;\n  }\n\n\n  body {\n        font-family: 'Montserrat';\n        font-size: 14px;\n        font-weight: 500;\n        background: var(--color-background);\n    }\n\n    html, body {\n        width:100%;\n    }\n\n    strong {\n        font-weight: 800;\n    }\n\n    a, button, input {\n        font-family: 'Montserrat';\n        font-weight: 500;\n    }\n\n    h1, h2, h3,\n    h4, h5, h6 {\n        font-weight:normal;\n    }\n\n    img {\n        font-size: 100%;\n        line-height: 100%;\n        vertical-align: top;\n    }\n\n    ol, ul, li {\n        list-style: none;\n    }\n    \n    table {\n        border-collapse: collapse;\n        border-spacing: 0;\n    }\n    \n    caption {\n        visibility: hidden;\n        overflow: hidden;\n        width: 0;\n        height: 0;\n        font-size: 0;\n        line-height: 0;\n    }\n\n    button {\n        background: #eee;\n        outline: none;\n    }\n\n    input, textarea, select {\n        font-size: 14px;\n        background: transparent;\n        outline: none;\n    }\n\n    input[type=\"submit\"],\n    button {\n        cursor: pointer;\n    }\n\n    input[type=\"number\"]::-webkit-outer-spin-button,\n    input[type=\"number\"]::-webkit-inner-spin-button {\n        -webkit-appearance: none;\n        margin: 0;\n    }\n\n    blockquote, q {\n        quotes: none;\n    }\n\n    blockquote:before,\n    blockquote:after,\n    q:before,\n    q:after {\n        content: '';\n        content: none;\n    }\n\n    textarea {\n        vertical-align: middle;\n    }\n    \n    address, i {\n        font-style: normal;\n    }\n\n    ::-webkit-input-placeholder {\n        color: #222;\n    }\n\n    :-moz-placeholder {\n        color: #222;\n    }\n\n    ::-moz-placeholder {\n        color: #222;\n    }\n\n    :-ms-input-placeholder {\n        color: #222;\n    }\n\n    /* anchor */\n    a {\n        font-family: 'Montserrat';\n        color: #000;\n        text-decoration: none;\n    }\n\n    a:link,\n    a:visited,\n    a:hover,\n    a:active,\n    a:focus {\n        text-decoration: none;\n    }\n    a[href^=tel] {\n        text-decoration: inherit;\n        color: inherit;\n    }\n\n    /* HTML5 display-role reset for older browsers */\n    article, aside, details,\n    figcaption, figure, footer,\n    header, hgroup, main,\n    menu, nav, section, video{\n        display: block;\n    }\n\n`;\n\nexport const MainBtnDefault = css`\n  display: inline-block;\n  text-align: center;\n  border-radius: var(--border-radius);\n  background: var(--color-point);\n  padding: 5px 10px;\n`;\n\nexport const MainBoxDefault = css`\n  border-radius: var(--border-radius);\n  border: 1px solid var(--color-point);\n  box-shadow: var(--box-shadow);\n`;\n\nexport default GlobalStyles;\n","import styled, { css } from \"styled-components\";\nimport { MainBtnDefault } from \"style/GlobalStyles\";\n\nexport const XwitterWrap = styled.div`\n  position: relative;\n  border-radius: var(--border-radius);\n  background: #fff;\n  overflow: hidden;\n\n  & + & {\n    margin-top: var(--spacing);\n  }\n`;\n\nexport const XwitterTopBar = styled.div`\n  width: 100%;\n  height: 26px;\n  background: #ddd;\n`;\n\nexport const XwitterEditWrap = styled.div`\n  padding: var(--spacing);\n`;\n\nexport const XwitterEditForm = styled.form``;\n\nexport const XwitterEditText = styled.textarea`\n  width: 100%;\n  height: 80px;\n  background: #f0f0f0;\n  padding: 10px;\n\n  @media ${(props) => props.theme.mobileS} {\n    height: 140px;\n  }\n`;\n\nexport const XwitterEditButtonWrap = styled.div`\n  width: 100%;\n  text-align: right;\n  margin-top: 10px;\n`;\n\nexport const XwitterEditButton = styled.input`\n  ${MainBtnDefault}\n  cursor: pointer;\n\n  ${(props) =>\n    props.cancel &&\n    css`\n      background: #ccc;\n    `}\n\n  & + & {\n    margin-left: 5px;\n  }\n`;\n\nexport const XwitterText = styled.div`\n  line-height: 1.4em;\n  padding: var(--spacing) 30px;\n`;\n\nexport const XwitterIconWrap = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 26px;\n  padding: 5px 10px;\n`;\n\nexport const XwitterButton = styled.button`\n  height: 16px;\n  font-size: 16px;\n  color: #555;\n  background: transparent;\n\n  & + & {\n    margin-left: 10px;\n  }\n`;\n\nexport const XwitterIcon = styled.span`\n  display: block;\n  width: 15px;\n  height: 15px;\n  border-radius: 100px;\n  background: ${(props) => (props.delete ? \"#ED6A5E\" : \"#61C454\")};\n`;\n\nexport const XwitterImgWrap = styled.p`\n  position: relative;\n  width: 100%;\n  overflow: hidden;\n  padding-top: 70%;\n  margin: 0 auto;\n  margin-top: 10px;\n`;\n\nexport const XwitterImg = styled.img`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 100%;\n  transform: translate(-50%, -50%);\n`;\n","import React, { useState } from \"react\";\nimport { dbService, storageService } from \"fbManager\";\nimport {\n  XwitterButton,\n  XwitterEditForm,\n  XwitterIcon,\n  XwitterTopBar,\n  XwitterImg,\n  XwitterImgWrap,\n  XwitterText,\n  XwitterWrap,\n  XwitterIconWrap,\n  XwitterEditText,\n  XwitterEditWrap,\n  XwitterEditButtonWrap,\n  XwitterEditButton,\n} from \"./styled\";\n\nconst Xwitt = ({ xwittObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newXwitt, setNewXwitt] = useState(xwittObj.text);\n  const onDelete = async () => {\n    const ok = window.confirm(\"Are you sure you want to delete this xwitt?\");\n    if (ok) {\n      await dbService.doc(`xwitts/${xwittObj.id}`).delete();\n      await storageService.refFromURL(xwittObj.attachmentUrl).delete();\n    }\n  };\n\n  const toggleEditing = () => setEditing((prev) => !prev);\n\n  const onEditingSubmit = async (e) => {\n    e.preventDefault();\n    await dbService.doc(`xwitts/${xwittObj.id}`).update({\n      text: newXwitt,\n    });\n    setEditing(false);\n  };\n\n  const onEditing = (e) => {\n    const { value } = e.target;\n    setNewXwitt(value);\n  };\n\n  return (\n    <XwitterWrap>\n      <XwitterTopBar />\n      {editing ? (\n        <XwitterEditWrap>\n          {isOwner && (\n            <>\n              <XwitterEditForm onSubmit={onEditingSubmit}>\n                <XwitterEditText\n                  type=\"text\"\n                  placeholder=\"Edit your Xwitt\"\n                  onChange={onEditing}\n                  value={newXwitt}\n                  required\n                />\n                <XwitterEditButtonWrap>\n                  <XwitterEditButton\n                    onClick={toggleEditing}\n                    type=\"button\"\n                    value=\"Cancel\"\n                    cancel\n                  />\n                  <XwitterEditButton type=\"submit\" value=\"Update\" />\n                </XwitterEditButtonWrap>\n              </XwitterEditForm>\n            </>\n          )}\n        </XwitterEditWrap>\n      ) : (\n        <>\n          <XwitterIconWrap>\n            {isOwner && (\n              <>\n                <XwitterButton onClick={onDelete} title=\"Delete\">\n                  <XwitterIcon delete></XwitterIcon>\n                </XwitterButton>\n                <XwitterButton onClick={toggleEditing} title=\"Edit\">\n                  <XwitterIcon></XwitterIcon>\n                </XwitterButton>\n              </>\n            )}\n          </XwitterIconWrap>\n\n          <XwitterText>\n            {xwittObj.text}\n            {xwittObj.attachmentUrl && (\n              <XwitterImgWrap>\n                <XwitterImg src={xwittObj.attachmentUrl} alt=\"img\" />\n              </XwitterImgWrap>\n            )}\n          </XwitterText>\n        </>\n      )}\n    </XwitterWrap>\n  );\n};\n\nexport default Xwitt;\n","import styled from \"styled-components\";\nimport { MainBtnDefault, MainBoxDefault } from \"style/GlobalStyles\";\n\nexport const XwitterFatoryForm = styled.form`\n  ${MainBoxDefault}\n\n  display: block;\n  padding: var(--spacing);\n  padding-bottom: 15px;\n`;\n\nexport const XwitterTextInputWrap = styled.div`\n  position: relative;\n  width: 100%;\n  padding-bottom: var(--spacing);\n  margin-bottom: 10px;\n`;\n\nexport const XwitterTextInput = styled.textarea`\n  display: block;\n  width: 100%;\n  height: 80px;\n  line-height: 1.4em;\n  caret-color: var(--color-point);\n  color: #fff;\n  outline: none;\n  overflow-y: scroll;\n  padding-right: 5px;\n  margin-bottom: var(--spacing);\n\n  &::placeholder {\n    color: #777;\n  }\n\n  @media ${(props) => props.theme.mobileS} {\n    height: 140px;\n  }\n`;\n\nexport const CountText = styled.span`\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  text-align: right;\n  color: #999;\n`;\n\nexport const AttachmentPreview = styled.div`\n  position: relative;\n  width: 100px;\n\n  img {\n    display: block;\n    width: 100%;\n  }\n`;\n\nexport const AttachmentPreviewClear = styled.button`\n  display: inline-block;\n  position: absolute;\n  top: -10px;\n  right: -7px;\n  z-index: 2;\n  width: 18px;\n  height: 18px;\n  font-size: 18px;\n  text-align: right;\n  background: transparent;\n  color: var(--color-point);\n`;\n\nexport const FormBottomWrap = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: flex-end;\n`;\n\nexport const AttachmentLabel = styled.label`\n  display: inline-block;\n  height: 26px;\n  font-size: 26px;\n  color: var(--color-point);\n  cursor: pointer;\n`;\n\nexport const AttachmentInput = styled.input`\n  opacity: 0;\n`;\n\nexport const XwitterSave = styled.input`\n  ${MainBtnDefault}\n`;\n","import React, { useState } from \"react\";\nimport { dbService, storageService } from \"fbManager\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport {\n  AttachmentInput,\n  AttachmentLabel,\n  AttachmentPreview,\n  XwitterFatoryForm,\n  XwitterTextInput,\n  AttachmentPreviewClear,\n  XwitterSave,\n  FormBottomWrap,\n  CountText,\n  XwitterTextInputWrap,\n} from \"./styled\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faImage } from \"@fortawesome/free-regular-svg-icons\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst XwitterFatory = ({ userObj }) => {\n  const [xwitt, setXwitt] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n  const [numberText, setNumberText] = useState(0);\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    let attachmentUrl = null;\n    if (attachment !== \"\") {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n      // putString 호출하면 UploadTask를 리턴해줌\n      // uuid 사진명\n    }\n\n    const xwittObj = {\n      text: xwitt,\n      createAt: Date.now(),\n      createId: userObj.uid,\n      attachmentUrl,\n    };\n    await dbService.collection(\"xwitts\").add(xwittObj);\n    setXwitt(\"\");\n    setAttachment(\"\");\n    setNumberText(0);\n  };\n\n  const onChange = (e) => {\n    const { value } = e.target;\n    setNumberText(value.length);\n    setXwitt(value);\n  };\n\n  const onFileChange = (e) => {\n    // console.log(e.target.files);\n    const {\n      target: { files },\n    } = e;\n    const theFile = files[0]; // 하나만\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      // 파일 로딩 또는 읽는 것이 끝날때 finishedEvent 갖게 됨\n      console.log(finishedEvent);\n      // currentTarget.result\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n    // img를 문자열로 변환해줌\n    console.log(e);\n  };\n\n  const onClearAttachment = () => setAttachment(null);\n\n  const textMaxLength = 120;\n\n  return (\n    <XwitterFatoryForm onSubmit={onSubmit}>\n      <XwitterTextInputWrap>\n        <XwitterTextInput\n          onChange={onChange}\n          value={xwitt}\n          type=\"text\"\n          placeholder=\"내가 최근 봤던 책에 나오는 여주들은 남들이 봤을때 사소한 것들로 인생을 굉장히 행복하게 살고 있었어. 행복을 대단하지 않게 생각해보면 우리는 좀 더 행복하게 살 수 있지 않을까\"\n          maxLength={textMaxLength}\n        />\n\n        {attachment && (\n          <AttachmentPreview>\n            <img src={attachment} alt=\"img\" />\n            <AttachmentPreviewClear onClick={onClearAttachment}>\n              <FontAwesomeIcon icon={faTimes} />\n            </AttachmentPreviewClear>\n          </AttachmentPreview>\n        )}\n\n        <CountText>\n          {numberText}/{textMaxLength}\n        </CountText>\n      </XwitterTextInputWrap>\n\n      <FormBottomWrap>\n        <AttachmentLabel htmlFor=\"add-photo\">\n          <FontAwesomeIcon icon={faImage} />\n        </AttachmentLabel>\n        <AttachmentInput\n          id=\"add-photo\"\n          onChange={onFileChange}\n          type=\"file\"\n          accept=\"image/*\"\n        />\n        <XwitterSave type=\"submit\" value=\"Save\" />\n      </FormBottomWrap>\n    </XwitterFatoryForm>\n  );\n};\n\nexport default XwitterFatory;\n","import styled from \"styled-components\";\n\nexport const HomeWrap = styled.div`\n  padding: 20px;\n`;\n\nexport const XwitterBox = styled.div`\n  padding-top: var(--spacing-wrap);\n`;\n\nexport const WriteButton = styled.button``;\n","import React, { useEffect, useState } from \"react\";\nimport { dbService } from \"fbManager\";\nimport Xwitt from \"components/Xwitt/index\";\nimport XwitterFatory from \"components/Xwitt/XwitterFatory/index\";\nimport { HomeWrap, XwitterBox } from \"./styled\";\n\nconst Home = ({ userObj }) => {\n  const [xwitts, setXwitts] = useState([]);\n\n  useEffect(() => {\n    dbService\n      .collection(\"xwitts\")\n      .orderBy(\"createAt\", \"desc\")\n      .onSnapshot((snapshot) => {\n        // console.log(snapshot.docs); // read, deldte, update\n        const xwittArray = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        setXwitts(xwittArray);\n      }); // 더 적게 리렌더 되서 더 빠르게 실행됨\n  }, []);\n\n  return (\n    <>\n      <HomeWrap>\n        <XwitterFatory userObj={userObj} />\n        <XwitterBox>\n          {xwitts.map((xwitt) => (\n            <Xwitt\n              key={xwitt.id}\n              xwittObj={xwitt}\n              isOwner={xwitt.createId === userObj.uid}\n            />\n          ))}\n        </XwitterBox>\n      </HomeWrap>\n    </>\n  );\n};\n\nexport default Home;\n","import styled, { css, keyframes } from \"styled-components\";\n\nexport const AuthFormWrap = styled.div`\n  padding-top: var(--spacing);\n`;\n\nexport const AuthFormInput = styled.input`\n  position: relative;\n  width: 100%;\n  border-radius: var(--border-radius);\n  background: #fff;\n  padding: 10px;\n\n  &::placeholder {\n    color: var(--color-placeholder);\n  }\n\n  & + & {\n    margin-top: 10px;\n  }\n  ${(props) =>\n    props.button &&\n    css`\n      color: #fff;\n      background-image: var(--btn-gradient);\n    `}\n`;\n\nexport const AuthToggle = styled.div`\n  text-align: center;\n  color: #777;\n  padding: 10px 0 30px;\n\n  span {\n    border-bottom: 1px solid #555;\n    cursor: pointer;\n    padding: 0 5px;\n  }\n`;\n\nconst errorShake = keyframes`\n  0% {\n    transform: translate(30px);\n    }\n  20% { \n    transform: translate(-30px);\n    }\n  40% {\n    transform: translate(15px);\n    }\n  60% {\n    transform: translate(-15px);\n    }\n  80% {\n    transform: translate(8px);\n    }\n  100% {\n    transform: translate(0px);\n    }\n`;\n\nexport const ErrorDesc = styled.p`\n  width: 100%;\n  min-height: 25px;\n  line-height: 1.2em;\n  color: var(--color-point);\n  text-align: center;\n  padding-top: 10px;\n\n  span {\n    display: inline-block;\n  }\n\n  .shaking {\n    animation: ${errorShake} 0.4s 1 linear;\n  }\n`;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { authService } from \"fbManager\";\nimport { AuthFormInput, AuthFormWrap, AuthToggle, ErrorDesc } from \"./styled\";\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const onChange = (e) => {\n    // console.log(e.target.name);\n    const { name, value } = e.target;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      let data;\n      if (!newAccount) {\n        // create account\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        // login\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      shakeText();\n      setError(error.message);\n      console.log(errorShake.current);\n    }\n  };\n\n  const focuseInput = useRef();\n  useEffect(() => {\n    focuseInput.current.focus();\n  }, []);\n\n  const errorShake = useRef();\n\n  const shakeText = () => {\n    errorShake.current.classList.add(\"shaking\");\n    setTimeout(() => {\n      errorShake.current.classList.remove(\"shaking\");\n    }, 500);\n  };\n\n  const toggleAccount = () =>\n    setNewAccount((prev) => {\n      return !prev;\n    });\n\n  return (\n    <AuthFormWrap>\n      <form onSubmit={onSubmit}>\n        <AuthFormInput\n          ref={focuseInput}\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Email\"\n          onChange={onChange}\n          value={email}\n          required\n        />\n        <AuthFormInput\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Password\"\n          onChange={onChange}\n          value={password}\n          required\n        />\n\n        <AuthFormInput\n          type=\"submit\"\n          value={newAccount ? \"Login\" : \"Create Account\"}\n          button\n        />\n        <ErrorDesc>\n          <span ref={errorShake}>{error}</span>\n        </ErrorDesc>\n      </form>\n      <AuthToggle>\n        <span onClick={toggleAccount}>\n          {newAccount ? \"Create Account\" : \"Sign In\"}\n        </span>\n      </AuthToggle>\n    </AuthFormWrap>\n  );\n};\n\nexport default AuthForm;\n","import styled from \"styled-components\";\nimport { MainBoxDefault } from \"style/GlobalStyles\";\n\nexport const AuthWrap = styled.div`\n  display: flex;\n  height: 100vh;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const AuthContainer = styled.div`\n  width: 100%;\n  max-width: 480px;\n  ${MainBoxDefault}\n  padding: var(--spacing-wrap);\n\n  @media ${(props) => props.theme.mobileM} {\n    padding: var(--spacing);\n  }\n`;\n\nexport const LogoWrap = styled.h1`\n  font-size: 50px;\n  color: var(--color-main);\n  text-align: center;\n`;\n","import styled from \"styled-components\";\n\nexport const AuthAccountWrap = styled.div`\n  display: flex;\n  border-radius: var(--border-radius);\n  background: #ddd;\n\n  @media ${(props) => props.theme.mobileM} {\n    display: block;\n  }\n`;\n\nexport const LogoIcon = styled.span`\n  display: inline-block;\n  font-size: 14px;\n  margin-right: 5px;\n`;\n\nexport const GoggleGitButton = styled.button`\n  position: relative;\n  width: 50%;\n  background: transparent;\n  padding: 10px;\n\n  & + & {\n    &::before {\n      content: \"\";\n      position: absolute;\n      top: 50%;\n      left: 0;\n      width: 1px;\n      height: 20px;\n      background: #999;\n      transform: translateY(-50%);\n    }\n  }\n\n  @media ${(props) => props.theme.mobileM} {\n    width: 100%;\n\n    & + & {\n      &::before {\n        top: 0;\n        left: 0;\n        right: 0;\n        width: 94%;\n        height: 1px;\n        margin: 0 auto;\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport { AuthAccountWrap, GoggleGitButton, LogoIcon } from \"./styled\";\nimport { authService, firebaseInstance } from \"fbManager\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGoogle, faGithub } from \"@fortawesome/free-brands-svg-icons\";\n\nconst AuthAccount = () => {\n  const onSocialClick = async (e) => {\n    const { name } = e.target;\n\n    if (name === \"google\") {\n      await authService.signInWithPopup(\n        new firebaseInstance.auth.GoogleAuthProvider()\n      );\n    } else if (name === \"github\") {\n      await authService.signInWithPopup(\n        new firebaseInstance.auth.GithubAuthProvider()\n      );\n    }\n  };\n  return (\n    <AuthAccountWrap>\n      <GoggleGitButton onClick={onSocialClick} name=\"google\">\n        <LogoIcon>\n          <FontAwesomeIcon icon={faGoogle} />\n        </LogoIcon>\n        Continue with Google\n      </GoggleGitButton>\n      <GoggleGitButton onClick={onSocialClick} name=\"github\">\n        <LogoIcon>\n          <FontAwesomeIcon icon={faGithub} />\n        </LogoIcon>\n        Continue with Github\n      </GoggleGitButton>\n    </AuthAccountWrap>\n  );\n};\n\nexport default AuthAccount;\n","import React from \"react\";\nimport AuthForm from \"components/Auth/AuthForm/index\";\nimport { AuthContainer, AuthWrap, LogoWrap } from \"./styled\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport AuthAccount from \"components/Auth/AuthAccount\";\nimport { faCommentDots } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Auth = () => {\n  return (\n    <AuthWrap>\n      <AuthContainer>\n        <LogoWrap>\n          <FontAwesomeIcon icon={faCommentDots} />\n        </LogoWrap>\n        <AuthForm />\n        <AuthAccount />\n      </AuthContainer>\n    </AuthWrap>\n  );\n};\n\nexport default Auth;\n","import styled from \"styled-components\";\nimport { MainBtnDefault, MainBoxDefault } from \"style/GlobalStyles\";\n\nexport const ProfileWrap = styled.div`\n  ${MainBoxDefault}\n\n  padding: var(--spacing-wrap);\n\n  @media ${(props) => props.theme.mobileM} {\n    padding: var(--spacing-wrap) var(--spacing);\n  }\n`;\n\nexport const ProfileNickInput = styled.input`\n  width: 100%;\n  border-radius: var(--border-radius);\n  background: #fff;\n  padding: 10px;\n\n  &::placeholder {\n    color: var(--color-placeholder);\n  }\n`;\n\nexport const ProfileNickFin = styled.input`\n  ${MainBtnDefault};\n\n  width: 100%;\n  margin-top: 10px;\n`;\n\nexport const LogoutButton = styled.button`\n  width: 100%;\n  color: #fff;\n  border-radius: var(--border-radius);\n  background-image: var(--btn-gradient);\n  padding: 10px;\n  margin-top: var(--spacing-wrap);\n`;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { authService } from \"fbManager\";\nimport {\n  LogoutButton,\n  ProfileNickFin,\n  ProfileNickInput,\n  ProfileWrap,\n} from \"./styled\";\n\nconst Profile = ({ refreshUser, userObj }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n    refreshUser();\n  };\n\n  const onChange = (e) => {\n    const {\n      target: { value },\n    } = e;\n    setNewDisplayName(value);\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUser();\n    }\n  };\n\n  return (\n    <ProfileWrap>\n      <form onSubmit={onSubmit}>\n        <ProfileNickInput\n          onChange={onChange}\n          value={newDisplayName}\n          type=\"text\"\n          placeholder=\"너의 닉네임은요?\"\n        />\n        <ProfileNickFin type=\"submit\" placeholder=\"Update\" value=\"결정완료\" />\n      </form>\n      <LogoutButton onClick={onLogOutClick}>Logout</LogoutButton>\n    </ProfileWrap>\n  );\n};\n\nexport default Profile;\n","import styled from \"styled-components\";\n\nexport const Nav = styled.nav`\n  padding: var(--spacing-wrap) 0 var(--spacing);\n`;\n\nexport const NavWrap = styled.ul`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const NavItem = styled.li`\n  text-align: center;\n  a {\n    color: #fff;\n  }\n\n  & + & {\n    margin-left: var(--spacing-wrap);\n  }\n`;\n\nexport const NavIcon = styled.div`\n  font-size: 30px;\n  color: var(--color-main);\n`;\n\nexport const NavTitle = styled.div`\n  margin-top: 5px;\n`;\n\nexport const Greetings = styled.h2`\n  font-size: 50px;\n  text-align: center;\n  -webkit-text-stroke: 2px var(--color-main);\n  padding: var(--spacing) 0;\n\n  @media ${(props) => props.theme.mobileM} {\n    font-size: 40px;\n    padding: 10px 0 var(--spacing);\n  }\n`;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Greetings, Nav, NavIcon, NavItem, NavTitle, NavWrap } from \"./styled\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHome, faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => {\n  return (\n    <>\n      <Nav>\n        <NavWrap>\n          <NavItem>\n            <Link to=\"/\">\n              <NavIcon>\n                <FontAwesomeIcon icon={faHome} />\n              </NavIcon>\n              <NavTitle>Home</NavTitle>\n            </Link>\n          </NavItem>\n          <NavItem>\n            <Link to=\"/profile\">\n              <NavIcon>\n                <FontAwesomeIcon icon={faUser} />\n              </NavIcon>\n              {/* {userObj.displayName ? (\n              <NavTitle>{userObj.displayName}의 Profile</NavTitle>\n            ) : (\n              <NavTitle>Profile</NavTitle>\n            )} */}\n              <NavTitle>Profile</NavTitle>\n            </Link>\n          </NavItem>\n        </NavWrap>\n      </Nav>\n      <Greetings>\n        Hello, {userObj.displayName ? userObj.displayName : \"Stranger\"}\n      </Greetings>\n    </>\n  );\n};\n\nexport default Navigation;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"routes/Home/index\";\nimport Auth from \"routes/Auth/index\";\nimport Profile from \"routes/Profile/index\";\nimport Navigation from \"components/Navigation/index\";\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <>\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n          </>\n        ) : (\n          <Router exact path=\"/\">\n            <Auth />\n          </Router>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import styled from \"styled-components\";\n\nexport const AppWrap = styled.div`\n  width: 90%;\n  max-width: 500px;\n  margin: 0 auto;\n`;\n\nexport const iconWrap = styled.div``;\n\nexport const LoadingWrap = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100vh;\n  font-size: 20px;\n  color: #fff;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const LoadingText = styled.p`\n  margin-top: 10px;\n`;\n\nexport const Footer = styled.footer`\n  color: #fff;\n  text-align: center;\n  padding: var(--spacing-wrap) 0;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbManager\";\nimport GlobalStyles from \"style/GlobalStyles\";\nimport { AppWrap, LoadingText, LoadingWrap, Footer } from \"./styled\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n          // firebase의 특정부분만 가져와서 react한테 전달해줌\n        });\n      } else {\n        setUserObj(null);\n        // 로그아웃\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <>\n      <GlobalStyles />\n      <AppWrap>\n        {init ? (\n          <AppRouter\n            refreshUser={refreshUser}\n            isLoggedIn={Boolean(userObj)}\n            userObj={userObj}\n          />\n        ) : (\n          <LoadingWrap>\n            <FontAwesomeIcon icon={faSpinner} spin />\n            <LoadingText>initializing...</LoadingText>\n          </LoadingWrap>\n        )}\n\n        <Footer>&copy; 2021 Xwitter</Footer>\n      </AppWrap>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport theme from \"style/theme\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}